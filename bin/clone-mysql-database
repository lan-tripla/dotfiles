#!/usr/bin/ruby

# skrypt przekopiuje wybran¹ bazê danych z parametru SRC do parametru DEST
# zak³adamy sta³e has³o na obu bazach

# check params
abort DATA.read if ARGV.length < 3

src = ARGV[0]
dest = ARGV[1]
db = ARGV[2]

include_database_creation = (ARGV[3] && ARGV[3] == 'create') ? true : false
filedate = `date +%Y-%m-%d`.strip
filename = "#{db}-#{filedate}.sql"


if !include_database_creation then
  grep = '| grep -v "CREATE DATABASE"'
else
  grep = ''
end

# fetch remote database to local file
`mysqldump --create-options -c -e -i --single-transaction -h #{src} -u root --password=testowe.haslo --databases #{db} #{grep} > #{filename}`

# update remote database from local file
`mysql --default-character-set=UTF8 -D #{db} -h #{dest} -u root --password=testowe.haslo < #{filename}`


__END__
Usage: clone-mysql-database <src> <dest> <db> [create]
  <src>    source host
  <dest>   destination host
  <db>     database name
  [create] whether to include the "CREATE DATABASE" command in the transferred sql (optional)

All previous data will be LOST. BEWARE! It's best to use this command through localhost databases as a middle point.
